syntax = "proto3";
package orders;

import "google/protobuf/timestamp.proto";

// Order service with definitions of CRUD + List rpc methods
service OrderService {
  
  // Creates a new order
  rpc Create (CreateOrderRequest) returns (CreateOrderResponse);
  
  // Retrieves an existing order
  rpc Retrieve (RetrieveOrderRequest) returns (RetrieveOrderResponse);
  
  // Updates an existing order
  rpc Update (UpdateOrderRequest) returns (UpdateOrderResponse);
  
  // Cancels an existing order
  rpc Delete (DeleteOrderRequest) returns (DeleteOrderResponse);
  
   // Lists current orders
  rpc List (ListOrderRequest) returns (ListOrderResponse);
}

// Message with order details (this is the object)
message Order {
  // Represents various order states
  enum Status {
    PENDING = 0;
    PAID = 1;
    SHIPPED = 2;
    DELIVERED = 3;
    CANCELLED = 4;
  }
  int64 order_id = 1;
  repeated Item items = 2;
  float total = 3;
  google.protobuf.Timestamp order_date = 5;
  Status status = 6;
}

// Message with payment information
message PaymentMethod {
    enum Type {
    NOT_DEFINED = 0;
    VISA = 1;
    MASTERCARD = 2;
    PAYPAL = 3;
    APPLEPAY = 4;
  }
   Type payment_type = 1;
   string pre_authorization_token = 2; 
}

// Message with detailed information about an item that can be included in an order
message Item {
  string description = 1;
  float price = 2;
}

// Request to create an order
message CreateOrderRequest {
  repeated Item items = 1;
  PaymentMethod payment_method = 2;
}

// Response to order creation
message CreateOrderResponse {
  Order order = 1;
}

// Request to retrieve an order
message RetrieveOrderRequest {
  int64 order_id = 1;
}

// Response to order retrieval
message RetrieveOrderResponse {
  Order order = 1;
}

// Request to update an existing order
message UpdateOrderRequest {
  int64 order_id = 1;
  repeated Item items = 2;
  PaymentMethod payment_method = 3;
}

// Response to updating an existing order
message UpdateOrderResponse {
  Order order = 1;
}

// Request to delete an existing order
message DeleteOrderRequest {
  int64 order_id = 1;
}

// Response to deleting an existing order
message DeleteOrderResponse {
  Order order = 1;
}

// Request to list current orders
message ListOrderRequest {
  repeated int64 ids = 1;
  Order.Status statuses = 2;
}

// Response with a list of orders
message ListOrderResponse {
  repeated Order orders = 1;
}
